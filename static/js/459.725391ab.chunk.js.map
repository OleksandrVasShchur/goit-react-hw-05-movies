{"version":3,"file":"static/js/459.725391ab.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","hooks/useFetchOneFilm.jsx","pages/MovieDetails.jsx","services/getInfo.jsx","webpack://goit-react-hw-05-movies/./src/pageStyle/pageStyle.module.css?705c"],"sourcesContent":["import React from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nfunction Loader() {\n  return (\n    <InfinitySpin\n      width=\"200\"\n      color=\"#4fa94d\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    />\n  );\n}\n\nexport default Loader;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieById } from '../services/getInfo';\n\nconst UseFetchOneFilm = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getOneMovie = async () => {\n      try {\n        const film = await getMovieById(movieId);\n        setMovie(film);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getOneMovie();\n  }, [movieId]);\n  return { movie, error, isLoading };\n};\n\nexport default UseFetchOneFilm;\n","import { Suspense } from 'react';\nimport { Link, useLocation, Outlet } from 'react-router-dom';\nimport UseFetchOneFilm from '../hooks/useFetchOneFilm';\nimport { BASE_POSTER_URL, PLACEHOLDER } from '../services/getInfo';\n\nimport Loader from 'components/Loader/Loader';\nimport css from '../pageStyle/pageStyle.module.css';\nconst MovieDetails = () => {\n  const { movie, error, isLoading } = UseFetchOneFilm();\n\n  const location = useLocation();\n  const linkToBackHref = location.state?.from ?? '/movies';\n\n  const { original_title, poster_path, vote_average, overview, genres } = movie;\n  \n  \n  return (\n    <section className={css.sectionMowDet}>\n      <div>\n        <Link className={css.goBackButton} to={linkToBackHref}>Go back</Link>\n      </div>\n      <div>\n        {error && <p textAlign=\"center\">Something went wrong ...</p>}\n        {isLoading && <Loader />}\n\n        <img className={css.imgMov}\n          src={`${\n            movie.poster_path\n              ? BASE_POSTER_URL + poster_path\n              : PLACEHOLDER + '?text=' + original_title\n          }`}\n          alt={movie.original_title}\n        />\n      </div>\n      <div>\n        <h1>{original_title}</h1>\n        <p className={css.raiting}>\n          User score: {(vote_average * 10).toFixed()} <span>%</span>\n        </p>\n        <p className={css.overview}>Overview</p>\n        <p>{overview}</p>\n        <p className={css.genress}>Genres:</p>\n        <ul className={css.genressList}>\n          {genres?.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link className={css.castReviews} to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link className={css.castReviews} to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </section>\n  );\n};\nexport default MovieDetails;\n\n// import {\n//     CountryWrapper,\n//     CountryDescription,\n//     Flag,\n//     Image,\n//     CountryTitle,\n//     CountryCapital,\n//     CountryDetail,\n//     Accent,\n//   } from './CountryInfo.styled';\n\n//   export const CountryInfo = ({ country: {\n//     flag,\n//     capital,\n//     countryName,\n//     id,\n//     languages = [],\n//     population,\n//   } }) => {\n//     return (\n//       <CountryWrapper >\n//         <Flag>\n//           <Image src={flag} alt={countryName} />\n//         </Flag>\n//         <CountryDescription>\n//           <CountryCapital>\n//             Capital: <Accent>{capital}</Accent>\n//           </CountryCapital>\n\n//           <CountryTitle>{countryName === 'Russian Federation' ? 'MORDOR' : countryName}</CountryTitle>\n\n//           <CountryDetail>\n//             Population: <Accent>{population}</Accent>\n//           </CountryDetail>\n\n//           <CountryDetail>\n//             Languages: <Accent>{languages.join(', ')}.</Accent>\n//           </CountryDetail>\n//         </CountryDescription>\n//       </CountryWrapper>\n//     );\n//   };\n","import axios from 'axios';\n\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4f130234350e3209206d8040420edb36';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"mainText\":\"pageStyle_mainText__AijDb\",\"sectionMowDet\":\"pageStyle_sectionMowDet__716-p\",\"goBackButton\":\"pageStyle_goBackButton__ZmIIE\",\"imgMov\":\"pageStyle_imgMov__zg3f5\",\"raiting\":\"pageStyle_raiting__iZvjb\",\"overview\":\"pageStyle_overview__kfNzA\",\"genress\":\"pageStyle_genress__BBbF7\",\"genressList\":\"pageStyle_genressList__37Swx\",\"castReviews\":\"pageStyle_castReviews__yK4AQ\",\"noFaundText\":\"pageStyle_noFaundText__UW2TR\"};"],"names":["width","color","wrapperStyle","position","top","left","transform","useState","movie","setMovie","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","getOneMovie","getMovieById","film","message","UseFetchOneFilm","location","useLocation","linkToBackHref","state","from","original_title","poster_path","vote_average","overview","genres","className","css","to","textAlign","Loader","src","BASE_POSTER_URL","PLACEHOLDER","alt","toFixed","map","genre","name","id","Suspense","fallback","axios","API_KEY","getTrendMovies","data","results","getMovieByQuery","query","getCast","cast","getReviews"],"sourceRoot":""}