{"version":3,"file":"static/js/186.559abf39.chunk.js","mappings":"mKAkBA,IAfA,WACE,OACE,SAAC,KAAD,CACEA,MAAM,MACNC,MAAM,UACNC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,0BAIlB,C,kHC8BD,UAzCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,MAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAkBE,OAhBFC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEOC,EAAAA,EAAAA,IAAWX,GAFlB,OAETG,EAFS,OAGfC,EAAWD,GAHI,gDAKfS,QAAQC,IAAR,MACAP,EAAS,KAAMQ,SANA,yBAQfN,GAAa,GARE,4EAAH,qDAWhBE,GACD,GAAE,CAACV,KAIF,gCACGK,IAAS,cAAGU,UAAU,SAAb,SAAsB,6BAC/BR,IAAa,SAAC,IAAD,KACd,+BACsB,IAAnBJ,EAAQa,SAAgB,uBAAG,2BAC3Bb,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,0BACE,0BAAM,YAAc,IAAED,MAExB,uBAAIC,MAJGF,EADE,SAWpB,C,+OC1CYG,EAAkB,mCAClBC,EAAc,sCAE3BC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAc,mCAAG,sGACLF,EAAAA,EAAAA,IAAA,sCAAyCC,IADpC,uBACpBE,EADoB,EACpBA,KADoB,kBAGrBA,EAAKC,SAHgB,2CAAH,qDAMdC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfG,EAAY,mCAAG,WAAM9B,GAAN,yFACHuB,EAAAA,EAAAA,IAAA,gBACZvB,EADY,oBACOwB,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZK,EAAO,mCAAG,WAAM/B,GAAN,yFACEuB,EAAAA,EAAAA,IAAA,gBACZvB,EADY,4BACewB,EADf,oBADF,uBACbE,EADa,EACbA,KADa,kBAKdA,EAAKM,MALS,2CAAH,sDAOPrB,EAAU,mCAAG,WAAMX,GAAN,yFACDuB,EAAAA,EAAAA,IAAA,gBACZvB,EADY,4BACewB,EADf,oBADC,uBAChBE,EADgB,EAChBA,KADgB,kBAKjBA,EAAKC,SALY,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","services/getInfo.jsx"],"sourcesContent":["import React from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nfunction Loader() {\n  return (\n    <InfinitySpin\n      width=\"200\"\n      color=\"#4fa94d\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    />\n  );\n}\n\nexport default Loader;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../services/getInfo';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n\n  useEffect(() => {\n    const ReviewInfo = async () => {\n      try {\n        const reviews = await getReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    ReviewInfo();\n  }, [movieId]);\n\n    \n    return ( \n    <>\n      {error && <p textAlign=\"center\">Something went wrong ...</p>}\n      {isLoading && <Loader />}\n      <section>\n        {reviews.length === 0 && <p>There is no reviews...</p>}\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>\n              <span>Author:</span> {author}\n            </p>\n            <p>{content}</p>\n          </li>\n        ))}\n      </section>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4f130234350e3209206d8040420edb36';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n"],"names":["width","color","wrapperStyle","position","top","left","transform","movieId","useParams","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useEffect","ReviewInfo","getReviews","console","log","message","textAlign","length","map","id","author","content","BASE_POSTER_URL","PLACEHOLDER","axios","API_KEY","getTrendMovies","data","results","getMovieByQuery","query","getMovieById","getCast","cast"],"sourceRoot":""}