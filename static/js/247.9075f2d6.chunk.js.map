{"version":3,"file":"static/js/247.9075f2d6.chunk.js","mappings":"kOA4DA,UAtDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,MAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEAC,EAAAA,EAAAA,IAAQX,GAFR,OAEbG,EAFa,OAGnBC,EAAQD,GAHW,gDAKnBG,EAAS,KAAMM,SALI,yBAOnBJ,GAAa,GAPM,4EAAH,qDAUpBE,GACD,GAAE,CAACV,KAGF,gCACGK,IAAS,cAAGQ,UAAU,SAAb,SAAsB,6BAC/BN,IAAa,SAAC,IAAD,KACd,8BACE,0BACGJ,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,2BACE,gBACEC,IAAG,UACDH,EACII,EAAAA,GAAkBJ,EAClBK,EAAAA,GAAc,SAAWJ,GAE/BK,IAAKL,KAEP,0BACE,0BAAM,YAAc,IAAEA,MAExB,0BACE,0BAAM,eAAiB,IAAEC,OAbpBH,EADD,KAkBV,SAAC,EAAAQ,SAAD,CAAUC,UAAU,yBAAK,uBAAzB,UACE,SAAC,KAAD,aAMX,C,mDCxCD,IAfA,WACE,OACE,SAAC,KAAD,CACEC,MAAM,MACNC,MAAM,UACNC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,0BAIlB,C,+OCdYX,EAAkB,mCAClBC,EAAc,sCAE3BW,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAc,mCAAG,sGACLF,EAAAA,EAAAA,IAAA,sCAAyCC,IADpC,uBACpBE,EADoB,EACpBA,KADoB,kBAGrBA,EAAKC,SAHgB,2CAAH,qDAMdC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfG,EAAY,mCAAG,WAAMvC,GAAN,yFACHgC,EAAAA,EAAAA,IAAA,gBACZhC,EADY,oBACOiC,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZxB,EAAO,mCAAG,WAAMX,GAAN,yFACEgC,EAAAA,EAAAA,IAAA,gBACZhC,EADY,4BACeiC,EADf,oBADF,uBACbE,EADa,EACbA,KADa,kBAKdA,EAAKhC,MALS,2CAAH,sDAOPqC,EAAU,mCAAG,WAAMxC,GAAN,yFACDgC,EAAAA,EAAAA,IAAA,gBACZhC,EADY,4BACeiC,EADf,oBADC,uBAChBE,EADgB,EAChBA,KADgB,kBAKjBA,EAAKC,SALY,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/Loader/Loader.jsx","services/getInfo.jsx"],"sourcesContent":["import { BASE_POSTER_URL, PLACEHOLDER } from '../../services/getInfo';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getCast } from '../../services/getInfo';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n\n  useEffect(() => {\n    const fetchTotalCast = async () => {\n      try {\n        const cast = await getCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTotalCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p textAlign=\"center\">Something went wrong ...</p>}\n      {isLoading && <Loader />}\n      <section>\n        <ul>\n          {cast.map(({ id, profile_path, original_name, character }) => (\n            <li key={id}>\n              <img\n                src={`${\n                  profile_path\n                    ? BASE_POSTER_URL + profile_path\n                    : PLACEHOLDER + '?text=' + original_name\n                }`}\n                alt={original_name}\n              />\n              <p>\n                <span> Actor:</span> {original_name}\n              </p>\n              <p>\n                <span>Character:</span> {character}\n              </p>\n            </li>\n          ))}\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </ul>\n      </section>\n    </>\n  );\n};\n\nexport default Cast;\n","import React from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nfunction Loader() {\n  return (\n    <InfinitySpin\n      width=\"200\"\n      color=\"#4fa94d\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    />\n  );\n}\n\nexport default Loader;\n","import axios from 'axios';\n\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4f130234350e3209206d8040420edb36';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","error","setError","isLoading","setIsLoading","useEffect","fetchTotalCast","getCast","message","textAlign","map","id","profile_path","original_name","character","src","BASE_POSTER_URL","PLACEHOLDER","alt","Suspense","fallback","width","color","wrapperStyle","position","top","left","transform","axios","API_KEY","getTrendMovies","data","results","getMovieByQuery","query","getMovieById","getReviews"],"sourceRoot":""}